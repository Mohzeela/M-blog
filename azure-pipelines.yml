# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'fb3e1619-7bad-4b03-af46-3fa16948e2a6'
  imageRepository: 'mohzeelamblog'
  containerRegistry: 'mohcontreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/client/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
   
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'MSDN Platforms Subscription(32eb20d3-efa4-4a51-a2ff-32721933e3dd)'
        azureContainerRegistry: '{"loginServer":"mohcontreg.azurecr.io", "id" : "/subscriptions/32eb20d3-efa4-4a51-a2ff-32721933e3dd/resourceGroups/mohregistry/providers/Microsoft.ContainerRegistry/registries/mohcontreg"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'MSDN Platforms Subscription(32eb20d3-efa4-4a51-a2ff-32721933e3dd)'
        azureContainerRegistry: '{"loginServer":"mohcontreg.azurecr.io", "id" : "/subscriptions/32eb20d3-efa4-4a51-a2ff-32721933e3dd/resourceGroups/mohregistry/providers/Microsoft.ContainerRegistry/registries/mohcontreg"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
    
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests
  
- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'm-blog'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests

          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: 'Container Registry Connection'
                kubernetesServiceConnection: 'Kubernetes Cluster Connection'
                namespace: 'm-blog'
          
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
                action: deploy
                kubernetesServiceConnection: 'Kubernetes Cluster Connection'
                namespace: 'default'
                manifests: |
                    $(Pipeline.Workspace)/client/manifest/clien.yml
                    $(Pipeline.Workspace)/client/manifest/client-svc.yml
                    $(Pipeline.Workspace)/comments/manifest/comments.yml
                    $(Pipeline.Workspace)/comments/manifest/comments-svc.yml
                    $(Pipeline.Workspace)/event_bus/manifest/event_bus.yml
                    $(Pipeline.Workspace)/event_bus/manifest/event_bus_svc.yml
                imagePullSecrets: |
                    $(imagePullSecret)
                containers: |
                    $(RegistryName)/$(webRepository):$(tag)
                    $(RegistryName)/$(leaderboardRepository):$(tag)


    
